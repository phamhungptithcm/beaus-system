# ==============================
# General Spring Boot Settings
# ==============================

# Server Settings
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

# ==============================
# Database Configuration (PostgreSQL)
# ==============================

# PostgreSQL Configuration
spring:
  profiles:
    active: dev
  datasource:
    url: jdbc:postgresql://dev-url:5432/your_database_name
    username: your_database_username
    password: your_database_password
    driver-class-name: org.postgresql.Driver

    # Connection Pooling (HikariCP)
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      idle-timeout: 30000
      connection-timeout: 30000
      max-lifetime: 60000

  # Hibernate Settings
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update  # Options: create, create-drop, validate, none
    show-sql: true  # Logs SQL queries
    properties:
      hibernate:
        format_sql: true  # Pretty formatting for SQL

  # Jackson configuration for UTC timezone
  jackson:
    time-zone: UTC

  # Multipart file upload size
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  # ==============================
  # Spring Security
  # ==============================
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid, profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            client-name: Google
          facebook:
            client-id: ${FACEBOOK_APP_ID}
            client-secret: ${FACEBOOK_APP_SECRET}
            scope: email, public_profile
            redirect-uri: "{baseUrl}/login/oauth2/code/facebook"
            client-name: Facebook

# ==============================
# Logging Configuration
# ==============================

logging:
  level:
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: trace  # Log Hibernate query execution
    org.springframework.security.oauth2: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Base URL for redirect (change it for different environments)
oauth:
  base-url: ${OAUTH_BASE_URL:http://localhost:8080}  # Default to localhost if not provided

# ==============================
# JWT Configuration (For OAuth + JWT)
# ==============================

jwt:
  secret: your_jwt_secret_key
  expiration: 3600 # in seconds (1 hour)
  refresh-token-expiration: 2592000 # in seconds (30 days)
  prefix: Bearer
  header: Authorization

# ==============================
# Actuator (Optional for Monitoring)
# ==============================

# Enabling Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
